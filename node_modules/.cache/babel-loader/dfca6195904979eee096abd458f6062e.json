{"ast":null,"code":"var _jsxFileName = \"/Users/Rmos/codingBootcamp/updateTwo/UCLA-LA-FSF-PT-09-2019-U-C-master/01-Class-Content/19-React/02-Homework/react-homework/src/App.js\";\nimport React, { Component } from \"react\";\nimport Filter from \"./components/Filter\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport ReactDOM from \"react-dom\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends\n    };\n\n    this.removeFriend = id => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const friends = this.state.friends.filter(friend => friend.id !== id); // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        friends\n      });\n    };\n\n    this.deparmentFilt = () => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      //const friends = this.state.friends.filter(friend => friend.name !== \"SpongeBob\");\n      //console.log(this.state);\n      const node = ReactDOM.findDOMNode(this);\n\n      if (node instanceof HTMLElement) {\n        const child = node.querySelector('.test');\n        console.log(child);\n\n        if (child.checked === true) {\n          console.log(\"checked\");\n        } else {\n          console.log(\"not checked\");\n        } //console.log(child)\n\n      } //console.log(node)\n\n\n      const friends = this.state.friends.filter(friend => friend.network !== \"n\");\n      this.setState({\n        friends\n      });\n      /*\n         handleCheckClick = () => {\n        this.setState({ checked: !this.state.checked });\n      }\n          */\n    };\n  }\n\n  //const result = words.filter(word => word.length > 6);\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Friends List\"), React.createElement(Filter, {\n      deparmentFilt: this.deparmentFilt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), this.state.friends.map(friend => React.createElement(FriendCard, {\n      removeFriend: this.removeFriend,\n      deparmentFilt: this.deparmentFilt,\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      occupation: friend.occupation,\n      location: friend.location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Rmos/codingBootcamp/updateTwo/UCLA-LA-FSF-PT-09-2019-U-C-master/01-Class-Content/19-React/02-Homework/react-homework/src/App.js"],"names":["React","Component","Filter","FriendCard","Wrapper","Title","friends","ReactDOM","App","state","removeFriend","id","filter","friend","setState","deparmentFilt","node","findDOMNode","HTMLElement","child","querySelector","console","log","checked","network","render","map","name","image","occupation","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BQ,KAF0B,GAElB;AACNH,MAAAA;AADM,KAFkB;;AAAA,SAM1BI,YAN0B,GAMXC,EAAE,IAAI;AACnB;AACA,YAAML,OAAO,GAAG,KAAKG,KAAL,CAAWH,OAAX,CAAmBM,MAAnB,CAA0BC,MAAM,IAAIA,MAAM,CAACF,EAAP,KAAcA,EAAlD,CAAhB,CAFmB,CAGnB;;AACA,WAAKG,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AACD,KAXyB;;AAAA,SAa1BS,aAb0B,GAaV,MAAM;AACpB;AACA;AACD;AAEA,YAAMC,IAAI,GAAGT,QAAQ,CAACU,WAAT,CAAqB,IAArB,CAAb;;AAEA,UAAID,IAAI,YAAYE,WAApB,EAAiC;AAChC,cAAMC,KAAK,GAAGH,IAAI,CAACI,aAAL,CAAmB,OAAnB,CAAd;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AAEA,YAAGA,KAAK,CAACI,OAAN,KAAgB,IAAnB,EAAwB;AACtBF,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,SAFD,MAEO;AAACD,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAA2B,SAPH,CAQhC;;AACH,OAhBuB,CAkBrB;;;AAEA,YAAMhB,OAAO,GAAG,KAAKG,KAAL,CAAWH,OAAX,CAAmBM,MAAnB,CAA0BC,MAAM,IAAIA,MAAM,CAACW,OAAP,KAAmB,GAAvD,CAAhB;AAEC,WAAKV,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AAEJ;;;;;AAOG,KA5CyB;AAAA;;AA+C1B;AAGA;AACAmB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAGE,oBAAC,MAAD;AACA,MAAA,aAAa,EAAE,KAAKV,aADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAOG,KAAKN,KAAL,CAAWH,OAAX,CAAmBoB,GAAnB,CAAuBb,MAAM,IAC5B,oBAAC,UAAD;AACE,MAAA,YAAY,EAAE,KAAKH,YADrB;AAEE,MAAA,aAAa,EAAE,KAAKK,aAFtB;AAGE,MAAA,EAAE,EAAEF,MAAM,CAACF,EAHb;AAIE,MAAA,GAAG,EAAEE,MAAM,CAACF,EAJd;AAKE,MAAA,IAAI,EAAEE,MAAM,CAACc,IALf;AAME,MAAA,KAAK,EAAEd,MAAM,CAACe,KANhB;AAOE,MAAA,UAAU,EAAEf,MAAM,CAACgB,UAPrB;AAQE,MAAA,QAAQ,EAAEhB,MAAM,CAACiB,QARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAPH,CADF;AAwBD;;AA5EyB;;AA+E5B,eAAetB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Filter from \"./components/Filter\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport ReactDOM from \"react-dom\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends\n  };\n\n  removeFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends = this.state.friends.filter(friend => friend.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends });\n  };\n\n  deparmentFilt = () => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    //const friends = this.state.friends.filter(friend => friend.name !== \"SpongeBob\");\n   //console.log(this.state);\n\n   const node = ReactDOM.findDOMNode(this);\n\n   if (node instanceof HTMLElement) {\n    const child = node.querySelector('.test');\n\n    console.log(child);\n\n    if(child.checked===true){\n      console.log(\"checked\")\n    } else {console.log(\"not checked\")}\n    //console.log(child)\n}\n\n   //console.log(node)\n\n   const friends = this.state.friends.filter(friend => friend.network !== \"n\");\n\n    this.setState({ friends });\n\n/*\n   handleCheckClick = () => {\n  this.setState({ checked: !this.state.checked });\n}\n    */\n\n\n  };\n\n\n  //const result = words.filter(word => word.length > 6);\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Friends List</Title>\n\n        <Filter\n        deparmentFilt={this.deparmentFilt}\n        />\n\n        {this.state.friends.map(friend => (\n          <FriendCard\n            removeFriend={this.removeFriend}\n            deparmentFilt={this.deparmentFilt}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n\n\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}