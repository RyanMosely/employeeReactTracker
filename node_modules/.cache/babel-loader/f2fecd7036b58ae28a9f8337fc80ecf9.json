{"ast":null,"code":"var _jsxFileName = \"/Users/Rmos/codingBootcamp/updateTwo/UCLA-LA-FSF-PT-09-2019-U-C-master/01-Class-Content/19-React/02-Homework/react-homework/src/App.js\";\nimport React, { Component } from \"react\";\nimport Filter from \"./components/Filter\";\nimport AmFilter from \"./components/AmFilter\";\nimport ManaFilter from \"./components/ManaFilter\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport ReactDOM from \"react-dom\";\nconst initialState = {\n  friends\n};\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  constructor(props) {\n    super(props);\n    this.state = {\n      friends\n    };\n\n    this.removeFriend = id => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const friends = this.state.friends.filter(friend => friend.id !== id); // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        friends\n      });\n    };\n\n    this.deparmentFilt = () => {\n      //console.log(initialState);\n      console.log(\"testytest\");\n      this.setState({\n        friends\n      });\n      const node = ReactDOM.findDOMNode(this);\n\n      if (node instanceof HTMLElement) {\n        const child = node.querySelector('.test');\n        const childTwo = node.querySelector('.testTwo');\n        const childThree = node.querySelector('.testThree');\n        console.log(child);\n        console.log(friends); // check item 1 is set. Add filtered items to array/object\n        // check item 2 is set. Append those filtered items\n\n        if (child.checked === true && childTwo.checked !== true) {\n          //let friends = this.state.friends\n          let friends = this.state.friends.filter(friend => friend.network === \"m\" || friend.network === \"a\");\n          console.log('friends: ', friends);\n          this.setState({\n            friends\n          });\n        }\n\n        if (child.checked === true && childTwo.checked === true) {\n          //let friends = this.state.friends\n          console.log(\"boyHowdy\");\n          let friends = this.state.friends.filter(friend => friend.network === \"m\" || friend.network === \"a\");\n          this.setState({\n            friends\n          });\n        }\n      }\n    };\n\n    this.deparmentFiltTwo = () => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      //const friends = this.state.friends.filter(friend => friend.name !== \"SpongeBob\");\n      //console.log(this.state);\n      console.log(\"testytest\");\n      const node = ReactDOM.findDOMNode(this);\n\n      if (node instanceof HTMLElement) {\n        const child = node.querySelector('.testTwo');\n        console.log(child);\n\n        if (child.checked === true) {\n          const friends = this.state.friends.filter(friend => friend.network === \"a\");\n          this.setState({\n            friends\n          });\n        } else {\n          this.setState({\n            friends\n          });\n        }\n      }\n    };\n\n    this.deparmentFiltThree = () => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      //const friends = this.state.friends.filter(friend => friend.name !== \"SpongeBob\");\n      //console.log(this.state);\n      console.log(\"testytest\");\n      const node = ReactDOM.findDOMNode(this);\n\n      if (node instanceof HTMLElement) {\n        const child = node.querySelector('.testThree');\n        console.log(child);\n\n        if (child.checked === true) {\n          const friends = this.state.friends.filter(friend => friend.network === \"e\");\n          this.setState({\n            friends\n          });\n        } else {\n          this.setState({\n            friends\n          });\n        }\n      }\n    };\n\n    this.state = initialState;\n  }\n\n  //const result = words.filter(word => word.length > 6);\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Friends List\"), React.createElement(Filter, {\n      deparmentFilt: this.deparmentFilt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(AmFilter, {\n      deparmentFilt: this.deparmentFilt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(ManaFilter, {\n      deparmentFiltThree: this.deparmentFilt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), this.state.friends.map(friend => React.createElement(FriendCard, {\n      removeFriend: this.removeFriend,\n      deparmentFilt: this.deparmentFilt,\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      occupation: friend.occupation,\n      location: friend.location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Rmos/codingBootcamp/updateTwo/UCLA-LA-FSF-PT-09-2019-U-C-master/01-Class-Content/19-React/02-Homework/react-homework/src/App.js"],"names":["React","Component","Filter","AmFilter","ManaFilter","FriendCard","Wrapper","Title","friends","ReactDOM","initialState","App","constructor","props","state","removeFriend","id","filter","friend","setState","deparmentFilt","console","log","node","findDOMNode","HTMLElement","child","querySelector","childTwo","childThree","checked","network","deparmentFiltTwo","deparmentFiltThree","render","map","name","image","occupation","location"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Filter from \"./components/Filter\";\nimport AmFilter from \"./components/AmFilter\";\nimport ManaFilter from \"./components/ManaFilter\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport ReactDOM from \"react-dom\";\n\nconst initialState = {\n  friends\n};\n\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends\n  };\n\n  constructor(props) {\n    super(props)\n    this.state = initialState;\n}\n\n  \n\n  removeFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends = this.state.friends.filter(friend => friend.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends });\n  };\n\n  deparmentFilt = () => {\n  \n//console.log(initialState);\n\n   console.log(\"testytest\");\n\n   this.setState({ friends }); \n\n   const node = ReactDOM.findDOMNode(this);\n   \n  \n\n   if (node instanceof HTMLElement) {\n    const child = node.querySelector('.test');\n    const childTwo = node.querySelector('.testTwo');\n    const childThree = node.querySelector('.testThree');\n\n    console.log(child);\n\n    \n\n    console.log(friends);\n\n    \n    // check item 1 is set. Add filtered items to array/object\n    // check item 2 is set. Append those filtered items\n    \n    if(child.checked === true && childTwo.checked!==true){\n      //let friends = this.state.friends\n\n      let friends = this.state.friends.filter(friend => friend.network === \"m\" || friend.network === \"a\");\n      console.log('friends: ', friends);\n\n      this.setState({ friends });\n    }\n    \n    if(child.checked===true && childTwo.checked===true){\n      //let friends = this.state.friends\n\n      console.log(\"boyHowdy\")\n\n      let friends = this.state.friends.filter(friend => friend.network === \"m\" || friend.network === \"a\");\n      \n      this.setState({ friends });\n    }\n}\n\n  };\n\n  deparmentFiltTwo = () => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    //const friends = this.state.friends.filter(friend => friend.name !== \"SpongeBob\");\n   //console.log(this.state);\n\n   console.log(\"testytest\");\n\n   const node = ReactDOM.findDOMNode(this);\n\n   if (node instanceof HTMLElement) {\n    const child = node.querySelector('.testTwo');\n\n    console.log(child);\n\n    if(child.checked===true){\n      const friends = this.state.friends.filter(friend => friend.network === \"a\");\n      this.setState({ friends });\n    } else {\n      \n      this.setState({ friends });\n    }\n   \n}\n  };\n\n  deparmentFiltThree = () => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    //const friends = this.state.friends.filter(friend => friend.name !== \"SpongeBob\");\n   //console.log(this.state);\n\n   console.log(\"testytest\");\n\n   const node = ReactDOM.findDOMNode(this);\n\n   if (node instanceof HTMLElement) {\n    const child = node.querySelector('.testThree');\n\n    console.log(child);\n\n    if(child.checked===true){\n      const friends = this.state.friends.filter(friend => friend.network === \"e\");\n      this.setState({ friends });\n    } else {\n      \n      this.setState({ friends });\n    }\n   \n}\n  };\n\n\n  \n\n\n  //const result = words.filter(word => word.length > 6);\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Friends List</Title>\n\n        <Filter\n        deparmentFilt={this.deparmentFilt}\n        />\n\n        <AmFilter\n        deparmentFilt={this.deparmentFilt}\n        />\n\n        <ManaFilter\n        deparmentFiltThree={this.deparmentFilt}\n        />\n\n        \n\n        {this.state.friends.map(friend => (\n          <FriendCard\n            removeFriend={this.removeFriend}\n            deparmentFilt={this.deparmentFilt}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n\n\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}