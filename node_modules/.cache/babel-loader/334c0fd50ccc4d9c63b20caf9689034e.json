{"ast":null,"code":"var _jsxFileName = \"/Users/Rmos/codingBootcamp/updateTwo/UCLA-LA-FSF-PT-09-2019-U-C-master/01-Class-Content/19-React/02-Homework/react-homework/src/App.js\";\nimport React, { Component } from \"react\";\nimport Filter from \"./components/Filter\";\nimport AmFilter from \"./components/AmFilter\";\nimport ManaFilter from \"./components/ManaFilter\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport ReactDOM from \"react-dom\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends\n    };\n\n    this.removeFriend = id => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const friends = this.state.friends.filter(friend => friend.id !== id); // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        friends\n      });\n    };\n\n    this.deparmentFilt = () => {\n      console.log(\"testytest\");\n      const node = ReactDOM.findDOMNode(this);\n\n      if (node instanceof HTMLElement) {\n        const child = node.querySelector('.test');\n        const childTwo = node.querySelector('.testTwo');\n        const childThree = node.querySelector('.testThree');\n        console.log(child);\n        this.setState({\n          friends\n        });\n        let friends = this.state.friends;\n\n        if (child.checked === true) {\n          friends = this.state.friends.filter(friend => friend.network == \"m\");\n          this.setState({\n            friends\n          });\n        } else if (child.checked === true && childTwo.checked == true) {\n          friends = this.state.friends.filter(friend => friend.network == \"m\" || friend.network == \"a\");\n          this.setState({\n            friends\n          });\n        }\n      }\n    };\n\n    this.deparmentFiltTwo = () => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      //const friends = this.state.friends.filter(friend => friend.name !== \"SpongeBob\");\n      //console.log(this.state);\n      console.log(\"testytest\");\n      const node = ReactDOM.findDOMNode(this);\n\n      if (node instanceof HTMLElement) {\n        const child = node.querySelector('.testTwo');\n        console.log(child);\n\n        if (child.checked === true) {\n          const friends = this.state.friends.filter(friend => friend.network === \"a\");\n          this.setState({\n            friends\n          });\n        } else {\n          this.setState({\n            friends\n          });\n        }\n      }\n    };\n\n    this.deparmentFiltThree = () => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      //const friends = this.state.friends.filter(friend => friend.name !== \"SpongeBob\");\n      //console.log(this.state);\n      console.log(\"testytest\");\n      const node = ReactDOM.findDOMNode(this);\n\n      if (node instanceof HTMLElement) {\n        const child = node.querySelector('.testThree');\n        console.log(child);\n\n        if (child.checked === true) {\n          const friends = this.state.friends.filter(friend => friend.network === \"e\");\n          this.setState({\n            friends\n          });\n        } else {\n          this.setState({\n            friends\n          });\n        }\n      }\n    };\n  }\n\n  //const result = words.filter(word => word.length > 6);\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Friends List\"), React.createElement(Filter, {\n      deparmentFilt: this.deparmentFilt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(AmFilter, {\n      deparmentFilt: this.deparmentFilt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(ManaFilter, {\n      deparmentFiltThree: this.deparmentFilt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), this.state.friends.map(friend => React.createElement(FriendCard, {\n      removeFriend: this.removeFriend,\n      deparmentFilt: this.deparmentFilt,\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      occupation: friend.occupation,\n      location: friend.location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Rmos/codingBootcamp/updateTwo/UCLA-LA-FSF-PT-09-2019-U-C-master/01-Class-Content/19-React/02-Homework/react-homework/src/App.js"],"names":["React","Component","Filter","AmFilter","ManaFilter","FriendCard","Wrapper","Title","friends","ReactDOM","App","state","removeFriend","id","filter","friend","setState","deparmentFilt","console","log","node","findDOMNode","HTMLElement","child","querySelector","childTwo","childThree","checked","network","deparmentFiltTwo","deparmentFiltThree","render","map","name","image","occupation","location"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Filter from \"./components/Filter\";\nimport AmFilter from \"./components/AmFilter\";\nimport ManaFilter from \"./components/ManaFilter\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport ReactDOM from \"react-dom\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends\n  };\n\n  removeFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends = this.state.friends.filter(friend => friend.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends });\n  };\n\n  deparmentFilt = () => {\n  \n   console.log(\"testytest\");\n\n   const node = ReactDOM.findDOMNode(this);\n\n   if (node instanceof HTMLElement) {\n    const child = node.querySelector('.test');\n    const childTwo = node.querySelector('.testTwo');\n    const childThree = node.querySelector('.testThree');\n\n    console.log(child);\n\n    this.setState({ friends });   \n\n    let friends = this.state.friends\n    if(child.checked===true){\n\n      friends = this.state.friends.filter(friend => friend.network == \"m\");\n      \n      this.setState({ friends });\n    } else if(child.checked===true && childTwo.checked==true){\n\n\n      friends = this.state.friends.filter(friend => friend.network == \"m\" || friend.network == \"a\");\n      \n      this.setState({ friends });\n    }\n}\n\n  };\n\n  deparmentFiltTwo = () => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    //const friends = this.state.friends.filter(friend => friend.name !== \"SpongeBob\");\n   //console.log(this.state);\n\n   console.log(\"testytest\");\n\n   const node = ReactDOM.findDOMNode(this);\n\n   if (node instanceof HTMLElement) {\n    const child = node.querySelector('.testTwo');\n\n    console.log(child);\n\n    if(child.checked===true){\n      const friends = this.state.friends.filter(friend => friend.network === \"a\");\n      this.setState({ friends });\n    } else {\n      \n      this.setState({ friends });\n    }\n   \n}\n  };\n\n  deparmentFiltThree = () => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    //const friends = this.state.friends.filter(friend => friend.name !== \"SpongeBob\");\n   //console.log(this.state);\n\n   console.log(\"testytest\");\n\n   const node = ReactDOM.findDOMNode(this);\n\n   if (node instanceof HTMLElement) {\n    const child = node.querySelector('.testThree');\n\n    console.log(child);\n\n    if(child.checked===true){\n      const friends = this.state.friends.filter(friend => friend.network === \"e\");\n      this.setState({ friends });\n    } else {\n      \n      this.setState({ friends });\n    }\n   \n}\n  };\n\n\n  \n\n\n  //const result = words.filter(word => word.length > 6);\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Friends List</Title>\n\n        <Filter\n        deparmentFilt={this.deparmentFilt}\n        />\n\n        <AmFilter\n        deparmentFilt={this.deparmentFilt}\n        />\n\n        <ManaFilter\n        deparmentFiltThree={this.deparmentFilt}\n        />\n\n        \n\n        {this.state.friends.map(friend => (\n          <FriendCard\n            removeFriend={this.removeFriend}\n            deparmentFilt={this.deparmentFilt}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n\n\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}